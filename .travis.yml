---
language: php

addons:
  apt:
    packages:
    - elinks # For dysplaying php files on console.

cache:
  directories:
    - $HOME/.composer/cache/files

php:
- nightly
- 7.2
- 7.1
- 7.0 # SKELETON_VERSION="^3.4" only one version of skeleton working with php 7.0

matrix:
  fast_finish: true
  include:
  - php: 7.2
    env: SKELETON_VERSION="4.1.x-dev@dev"
  - php: 7.2
    env: SKELETON_VERSION="dev-master@dev"
  allow_failures:
  - php: nightly
  # - env: SKELETON_VERSION="4.2.x-dev@dev"
  - env: SKELETON_VERSION="dev-master@dev"

before_install:
# - pip install pygments # but now pygmentize is no more used right here.
- go get -u github.com/jingweno/ccat

install:
- composer create-project --no-install symfony/skeleton skeleton $SKELETON_VERSION
- cd skeleton
# - if [ "dev-master@dev" = $SKELETON_VERSION ]; then composer remove --no-update symfony/lts; fi
#^ No more needed!
- composer install

- composer require --dev symfony/web-server-bundle

# - composer require annotations #  [ERROR] Missing package: to use the make:controller command
# - composer require --dev profiler
# - composer require twig
# - composer require orm
# - composer require form
# - composer require form validator
# - composer require --dev maker-bundle

before_script:
- composer show
- bin/console
- ls --color
- ls -R --color bin config public src
# - ls -R --color var
- $GOPATH/bin/ccat composer.json
- $GOPATH/bin/ccat config/bundles.php
- $GOPATH/bin/ccat config/routes.yaml
- $GOPATH/bin/ccat config/services.yaml
- $GOPATH/bin/ccat config/packages/framework.yaml
- $GOPATH/bin/ccat config/packages/routing.yaml
- $GOPATH/bin/ccat config/packages/dev/routing.yaml
- $GOPATH/bin/ccat config/packages/test/framework.yaml
- $GOPATH/bin/ccat src/Kernel.php
- php -s src/Kernel.php | elinks -force-html -dump-color-mode 4 -dump

script:
- bin/console server:start
# - make serve # would need a Makefile !
- sleep .01
- elinks http://localhost:8000/ -dump-color-mode 4 -dump
- w3m http://localhost:8000/ | cat # no webpage defined right now! (try also elinks)

- curl -H "Accept: text/plain" https://security.sensiolabs.org/check_lock -F 'lock=@composer.lock'
  #^ This checks that the application doesn't use dependencies with known security vulnerabilities

after_script:
